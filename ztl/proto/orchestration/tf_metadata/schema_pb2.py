# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: schema.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import any_pb2 as google_dot_protobuf_dot_any__pb2
import derived_feature_pb2 as derived__feature__pb2
import path_pb2 as path__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0cschema.proto\x12\x0btf_metadata\x1a\x19google/protobuf/any.proto\x1a\x15\x64\x65rived_feature.proto\x1a\npath.proto\"\xf4\x04\n\x06Schema\x12%\n\x07\x66\x65\x61ture\x18\x01 \x03(\x0b\x32\x14.tf_metadata.Feature\x12\x32\n\x0esparse_feature\x18\x06 \x03(\x0b\x32\x1a.tf_metadata.SparseFeature\x12\x36\n\x10weighted_feature\x18\x0c \x03(\x0b\x32\x1c.tf_metadata.WeightedFeature\x12\x30\n\rstring_domain\x18\x04 \x03(\x0b\x32\x19.tf_metadata.StringDomain\x12.\n\x0c\x66loat_domain\x18\t \x03(\x0b\x32\x18.tf_metadata.FloatDomain\x12*\n\nint_domain\x18\n \x03(\x0b\x32\x16.tf_metadata.IntDomain\x12\x1b\n\x13\x64\x65\x66\x61ult_environment\x18\x05 \x03(\t\x12+\n\nannotation\x18\x08 \x01(\x0b\x32\x17.tf_metadata.Annotation\x12<\n\x13\x64\x61taset_constraints\x18\x0b \x01(\x0b\x32\x1f.tf_metadata.DatasetConstraints\x12W\n\x1btensor_representation_group\x18\r \x03(\x0b\x32\x32.tf_metadata.Schema.TensorRepresentationGroupEntry\x1ah\n\x1eTensorRepresentationGroupEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x35\n\x05value\x18\x02 \x01(\x0b\x32&.tf_metadata.TensorRepresentationGroup:\x02\x38\x01\">\n\x0eValueCountList\x12,\n\x0bvalue_count\x18\x01 \x03(\x0b\x32\x17.tf_metadata.ValueCount\"\xef\x0b\n\x07\x46\x65\x61ture\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x16\n\ndeprecated\x18\x02 \x01(\x08\x42\x02\x18\x01\x12\x30\n\x08presence\x18\x0e \x01(\x0b\x32\x1c.tf_metadata.FeaturePresenceH\x00\x12\x41\n\x0egroup_presence\x18\x11 \x01(\x0b\x32\'.tf_metadata.FeaturePresenceWithinGroupH\x00\x12(\n\x05shape\x18\x17 \x01(\x0b\x32\x17.tf_metadata.FixedShapeH\x01\x12.\n\x0bvalue_count\x18\x05 \x01(\x0b\x32\x17.tf_metadata.ValueCountH\x01\x12\x33\n\x0cvalue_counts\x18  \x01(\x0b\x32\x1b.tf_metadata.ValueCountListH\x01\x12&\n\x04type\x18\x06 \x01(\x0e\x32\x18.tf_metadata.FeatureType\x12\x10\n\x06\x64omain\x18\x07 \x01(\tH\x02\x12,\n\nint_domain\x18\t \x01(\x0b\x32\x16.tf_metadata.IntDomainH\x02\x12\x30\n\x0c\x66loat_domain\x18\n \x01(\x0b\x32\x18.tf_metadata.FloatDomainH\x02\x12\x32\n\rstring_domain\x18\x0b \x01(\x0b\x32\x19.tf_metadata.StringDomainH\x02\x12.\n\x0b\x62ool_domain\x18\r \x01(\x0b\x32\x17.tf_metadata.BoolDomainH\x02\x12\x32\n\rstruct_domain\x18\x1d \x01(\x0b\x32\x19.tf_metadata.StructDomainH\x02\x12\x45\n\x17natural_language_domain\x18\x18 \x01(\x0b\x32\".tf_metadata.NaturalLanguageDomainH\x02\x12\x30\n\x0cimage_domain\x18\x19 \x01(\x0b\x32\x18.tf_metadata.ImageDomainH\x02\x12,\n\nmid_domain\x18\x1a \x01(\x0b\x32\x16.tf_metadata.MIDDomainH\x02\x12,\n\nurl_domain\x18\x1b \x01(\x0b\x32\x16.tf_metadata.URLDomainH\x02\x12.\n\x0btime_domain\x18\x1c \x01(\x0b\x32\x17.tf_metadata.TimeDomainH\x02\x12:\n\x12time_of_day_domain\x18\x1e \x01(\x0b\x32\x1c.tf_metadata.TimeOfDayDomainH\x02\x12\x46\n\x18\x64istribution_constraints\x18\x0f \x01(\x0b\x32$.tf_metadata.DistributionConstraints\x12+\n\nannotation\x18\x10 \x01(\x0b\x32\x17.tf_metadata.Annotation\x12\x37\n\x0fskew_comparator\x18\x12 \x01(\x0b\x32\x1e.tf_metadata.FeatureComparator\x12\x38\n\x10\x64rift_comparator\x18\x15 \x01(\x0b\x32\x1e.tf_metadata.FeatureComparator\x12\x16\n\x0ein_environment\x18\x14 \x03(\t\x12\x1a\n\x12not_in_environment\x18\x13 \x03(\t\x12\x34\n\x0flifecycle_stage\x18\x16 \x01(\x0e\x32\x1b.tf_metadata.LifecycleStage\x12:\n\x12unique_constraints\x18\x1f \x01(\x0b\x32\x1e.tf_metadata.UniqueConstraints\x12\x44\n\x19validation_derived_source\x18\" \x01(\x0b\x32!.tf_metadata.DerivedFeatureSource\x12\x38\n\x11sequence_metadata\x18# \x01(\x0b\x32\x1d.tf_metadata.SequenceMetadataB\x16\n\x14presence_constraintsB\x0c\n\nshape_typeB\r\n\x0b\x64omain_infoJ\x04\x08!\x10\"\"X\n\nAnnotation\x12\x0b\n\x03tag\x18\x01 \x03(\t\x12\x0f\n\x07\x63omment\x18\x02 \x03(\t\x12,\n\x0e\x65xtra_metadata\x18\x03 \x03(\x0b\x32\x14.google.protobuf.Any\"X\n\x16NumericValueComparator\x12\x1e\n\x16min_fraction_threshold\x18\x01 \x01(\x01\x12\x1e\n\x16max_fraction_threshold\x18\x02 \x01(\x01\"\xe6\x01\n\x12\x44\x61tasetConstraints\x12J\n\x1dnum_examples_drift_comparator\x18\x01 \x01(\x0b\x32#.tf_metadata.NumericValueComparator\x12L\n\x1fnum_examples_version_comparator\x18\x02 \x01(\x0b\x32#.tf_metadata.NumericValueComparator\x12\x1a\n\x12min_examples_count\x18\x03 \x01(\x03\x12\x1a\n\x12max_examples_count\x18\x04 \x01(\x03\"Y\n\nFixedShape\x12(\n\x03\x64im\x18\x02 \x03(\x0b\x32\x1b.tf_metadata.FixedShape.Dim\x1a!\n\x03\x44im\x12\x0c\n\x04size\x18\x01 \x01(\x03\x12\x0c\n\x04name\x18\x02 \x01(\t\"&\n\nValueCount\x12\x0b\n\x03min\x18\x01 \x01(\x03\x12\x0b\n\x03max\x18\x02 \x01(\x03\"\xa4\x01\n\x0fWeightedFeature\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\"\n\x07\x66\x65\x61ture\x18\x02 \x01(\x0b\x32\x11.tf_metadata.Path\x12)\n\x0eweight_feature\x18\x03 \x01(\x0b\x32\x11.tf_metadata.Path\x12\x34\n\x0flifecycle_stage\x18\x04 \x01(\x0e\x32\x1b.tf_metadata.LifecycleStage\"\xce\x03\n\rSparseFeature\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x16\n\ndeprecated\x18\x02 \x01(\x08\x42\x02\x18\x01\x12\x34\n\x0flifecycle_stage\x18\x07 \x01(\x0e\x32\x1b.tf_metadata.LifecycleStage\x12\x32\n\x08presence\x18\x04 \x01(\x0b\x32\x1c.tf_metadata.FeaturePresenceB\x02\x18\x01\x12,\n\x0b\x64\x65nse_shape\x18\x05 \x01(\x0b\x32\x17.tf_metadata.FixedShape\x12>\n\rindex_feature\x18\x06 \x03(\x0b\x32\'.tf_metadata.SparseFeature.IndexFeature\x12\x11\n\tis_sorted\x18\x08 \x01(\x08\x12>\n\rvalue_feature\x18\t \x01(\x0b\x32\'.tf_metadata.SparseFeature.ValueFeature\x12*\n\x04type\x18\n \x01(\x0e\x32\x18.tf_metadata.FeatureTypeB\x02\x18\x01\x1a\x1c\n\x0cIndexFeature\x12\x0c\n\x04name\x18\x01 \x01(\t\x1a\x1c\n\x0cValueFeature\x12\x0c\n\x04name\x18\x01 \x01(\tJ\x04\x08\x0b\x10\x0c\"5\n\x17\x44istributionConstraints\x12\x1a\n\x0fmin_domain_mass\x18\x01 \x01(\x01:\x01\x31\"\xac\x01\n\x1a\x46\x65\x61tureCoverageConstraints\x12\x14\n\x0cmin_coverage\x18\x01 \x01(\x02\x12\x1c\n\x14min_avg_token_length\x18\x02 \x01(\x02\x12\x1e\n\x16\x65xcluded_string_tokens\x18\x03 \x03(\t\x12\x1f\n\x13\x65xcluded_int_tokens\x18\x04 \x03(\x03\x42\x02\x10\x01\x12\x19\n\x11oov_string_tokens\x18\x05 \x03(\t\"\xca\x01\n\x18SequenceValueConstraints\x12\x13\n\tint_value\x18\x01 \x01(\x03H\x00\x12\x16\n\x0cstring_value\x18\x02 \x01(\tH\x00\x12\x18\n\x10min_per_sequence\x18\x03 \x01(\x03\x12\x18\n\x10max_per_sequence\x18\x04 \x01(\x03\x12!\n\x19min_fraction_of_sequences\x18\x05 \x01(\x02\x12!\n\x19max_fraction_of_sequences\x18\x06 \x01(\x02\x42\x07\n\x05value\"\x90\x01\n\x19SequenceLengthConstraints\x12\x1a\n\x12\x65xcluded_int_value\x18\x01 \x03(\x03\x12\x1d\n\x15\x65xcluded_string_value\x18\x02 \x03(\t\x12\x1b\n\x13min_sequence_length\x18\x03 \x01(\x03\x12\x1b\n\x13max_sequence_length\x18\x04 \x01(\x03\"K\n\tIntDomain\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0b\n\x03min\x18\x03 \x01(\x03\x12\x0b\n\x03max\x18\x04 \x01(\x03\x12\x16\n\x0eis_categorical\x18\x05 \x01(\x08\"\x8f\x01\n\x0b\x46loatDomain\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0b\n\x03min\x18\x03 \x01(\x02\x12\x0b\n\x03max\x18\x04 \x01(\x02\x12\x14\n\x0c\x64isallow_nan\x18\x05 \x01(\x08\x12\x14\n\x0c\x64isallow_inf\x18\x06 \x01(\x08\x12\x14\n\x0cis_embedding\x18\x07 \x01(\x08\x12\x16\n\x0eis_categorical\x18\x08 \x01(\x08\"i\n\x0cStructDomain\x12%\n\x07\x66\x65\x61ture\x18\x01 \x03(\x0b\x32\x14.tf_metadata.Feature\x12\x32\n\x0esparse_feature\x18\x02 \x03(\x0b\x32\x1a.tf_metadata.SparseFeature\"\xbf\x01\n\x0cStringDomain\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x03(\t\x12=\n\x0eis_categorical\x18\x03 \x01(\x0e\x32%.tf_metadata.StringDomain.Categorical\"S\n\x0b\x43\x61tegorical\x12\x1b\n\x17\x43\x41TEGORICAL_UNSPECIFIED\x10\x00\x12\x13\n\x0f\x43\x41TEGORICAL_YES\x10\x01\x12\x12\n\x0e\x43\x41TEGORICAL_NO\x10\x02\"C\n\nBoolDomain\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x12\n\ntrue_value\x18\x02 \x01(\t\x12\x13\n\x0b\x66\x61lse_value\x18\x03 \x01(\t\"\x98\x02\n\x15NaturalLanguageDomain\x12\x12\n\nvocabulary\x18\x01 \x01(\t\x12\x39\n\x08\x63overage\x18\x02 \x01(\x0b\x32\'.tf_metadata.FeatureCoverageConstraints\x12@\n\x11token_constraints\x18\x03 \x03(\x0b\x32%.tf_metadata.SequenceValueConstraints\x12K\n\x1bsequence_length_constraints\x18\x05 \x01(\x0b\x32&.tf_metadata.SequenceLengthConstraints\x12!\n\x19location_constraint_regex\x18\x04 \x01(\t\"T\n\x0bImageDomain\x12(\n minimum_supported_image_fraction\x18\x01 \x01(\x02\x12\x1b\n\x13max_image_byte_size\x18\x02 \x01(\x03\"\x0b\n\tMIDDomain\"\x0b\n\tURLDomain\"\x83\x02\n\nTimeDomain\x12\x17\n\rstring_format\x18\x01 \x01(\tH\x00\x12\x43\n\x0einteger_format\x18\x02 \x01(\x0e\x32).tf_metadata.TimeDomain.IntegerTimeFormatH\x00\"\x8c\x01\n\x11IntegerTimeFormat\x12\x12\n\x0e\x46ORMAT_UNKNOWN\x10\x00\x12\r\n\tUNIX_DAYS\x10\x05\x12\x10\n\x0cUNIX_SECONDS\x10\x01\x12\x15\n\x11UNIX_MILLISECONDS\x10\x02\x12\x15\n\x11UNIX_MICROSECONDS\x10\x03\x12\x14\n\x10UNIX_NANOSECONDS\x10\x04\x42\x08\n\x06\x66ormat\"\xc6\x01\n\x0fTimeOfDayDomain\x12\x17\n\rstring_format\x18\x01 \x01(\tH\x00\x12M\n\x0einteger_format\x18\x02 \x01(\x0e\x32\x33.tf_metadata.TimeOfDayDomain.IntegerTimeOfDayFormatH\x00\"A\n\x16IntegerTimeOfDayFormat\x12\x12\n\x0e\x46ORMAT_UNKNOWN\x10\x00\x12\x13\n\x0fPACKED_64_NANOS\x10\x01\x42\x08\n\x06\x66ormat\":\n\x0f\x46\x65\x61turePresence\x12\x14\n\x0cmin_fraction\x18\x01 \x01(\x01\x12\x11\n\tmin_count\x18\x02 \x01(\x03\".\n\x1a\x46\x65\x61turePresenceWithinGroup\x12\x10\n\x08required\x18\x01 \x01(\x08\"!\n\x0cInfinityNorm\x12\x11\n\tthreshold\x18\x01 \x01(\x01\",\n\x17JensenShannonDivergence\x12\x11\n\tthreshold\x18\x01 \x01(\x01\"\x8e\x01\n\x11\x46\x65\x61tureComparator\x12\x30\n\rinfinity_norm\x18\x01 \x01(\x0b\x32\x19.tf_metadata.InfinityNorm\x12G\n\x19jensen_shannon_divergence\x18\x02 \x01(\x0b\x32$.tf_metadata.JensenShannonDivergence\"-\n\x11UniqueConstraints\x12\x0b\n\x03min\x18\x01 \x01(\x03\x12\x0b\n\x03max\x18\x02 \x01(\x03\"\xd0\x08\n\x14TensorRepresentation\x12\x45\n\x0c\x64\x65nse_tensor\x18\x01 \x01(\x0b\x32-.tf_metadata.TensorRepresentation.DenseTensorH\x00\x12T\n\x14varlen_sparse_tensor\x18\x02 \x01(\x0b\x32\x34.tf_metadata.TensorRepresentation.VarLenSparseTensorH\x00\x12G\n\rsparse_tensor\x18\x03 \x01(\x0b\x32..tf_metadata.TensorRepresentation.SparseTensorH\x00\x12G\n\rragged_tensor\x18\x04 \x01(\x0b\x32..tf_metadata.TensorRepresentation.RaggedTensorH\x00\x1ao\n\x0c\x44\x65\x66\x61ultValue\x12\x15\n\x0b\x66loat_value\x18\x01 \x01(\x01H\x00\x12\x13\n\tint_value\x18\x02 \x01(\x03H\x00\x12\x15\n\x0b\x62ytes_value\x18\x03 \x01(\x0cH\x00\x12\x14\n\nuint_value\x18\x04 \x01(\x04H\x00\x42\x06\n\x04kind\x1a\x91\x01\n\x0b\x44\x65nseTensor\x12\x13\n\x0b\x63olumn_name\x18\x01 \x01(\t\x12&\n\x05shape\x18\x02 \x01(\x0b\x32\x17.tf_metadata.FixedShape\x12\x45\n\rdefault_value\x18\x03 \x01(\x0b\x32..tf_metadata.TensorRepresentation.DefaultValue\x1a)\n\x12VarLenSparseTensor\x12\x13\n\x0b\x63olumn_name\x18\x01 \x01(\t\x1as\n\x0cSparseTensor\x12,\n\x0b\x64\x65nse_shape\x18\x01 \x01(\x0b\x32\x17.tf_metadata.FixedShape\x12\x1a\n\x12index_column_names\x18\x02 \x03(\t\x12\x19\n\x11value_column_name\x18\x03 \x01(\t\x1a\x9f\x02\n\x0cRaggedTensor\x12\'\n\x0c\x66\x65\x61ture_path\x18\x01 \x01(\x0b\x32\x11.tf_metadata.Path\x12K\n\tpartition\x18\x03 \x03(\x0b\x32\x38.tf_metadata.TensorRepresentation.RaggedTensor.Partition\x12P\n\x13row_partition_dtype\x18\x02 \x01(\x0e\x32\x33.tf_metadata.TensorRepresentation.RowPartitionDType\x1aG\n\tPartition\x12\x1c\n\x12uniform_row_length\x18\x01 \x01(\x03H\x00\x12\x14\n\nrow_length\x18\x02 \x01(\tH\x00\x42\x06\n\x04kind\":\n\x11RowPartitionDType\x12\x0f\n\x0bUNSPECIFIED\x10\x00\x12\t\n\x05INT64\x10\x01\x12\t\n\x05INT32\x10\x02\x42\x06\n\x04kind\"\xdc\x01\n\x19TensorRepresentationGroup\x12_\n\x15tensor_representation\x18\x01 \x03(\x0b\x32@.tf_metadata.TensorRepresentationGroup.TensorRepresentationEntry\x1a^\n\x19TensorRepresentationEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x30\n\x05value\x18\x02 \x01(\x0b\x32!.tf_metadata.TensorRepresentation:\x02\x38\x01\"\xb4\x01\n\x10SequenceMetadata\x12I\n\x11sequential_status\x18\x03 \x01(\x0e\x32..tf_metadata.SequenceMetadata.SequentialStatus\"U\n\x10SequentialStatus\x12\x1a\n\x16SEQUENTIAL_UNSPECIFIED\x10\x00\x12\x12\n\x0eSEQUENTIAL_YES\x10\x01\x12\x11\n\rSEQUENTIAL_NO\x10\x02*\xa1\x01\n\x0eLifecycleStage\x12\x11\n\rUNKNOWN_STAGE\x10\x00\x12\x0b\n\x07PLANNED\x10\x01\x12\t\n\x05\x41LPHA\x10\x02\x12\x08\n\x04\x42\x45TA\x10\x03\x12\x0e\n\nPRODUCTION\x10\x04\x12\x0e\n\nDEPRECATED\x10\x05\x12\x0e\n\nDEBUG_ONLY\x10\x06\x12\x0c\n\x08\x44ISABLED\x10\x07\x12\x16\n\x12VALIDATION_DERIVED\x10\t\"\x04\x08\x08\x10\x08*J\n\x0b\x46\x65\x61tureType\x12\x10\n\x0cTYPE_UNKNOWN\x10\x00\x12\t\n\x05\x42YTES\x10\x01\x12\x07\n\x03INT\x10\x02\x12\t\n\x05\x46LOAT\x10\x03\x12\n\n\x06STRUCT\x10\x04\x42!\n\x1aorg.tensorflow.metadata.v0P\x01\xf8\x01\x01')

_LIFECYCLESTAGE = DESCRIPTOR.enum_types_by_name['LifecycleStage']
LifecycleStage = enum_type_wrapper.EnumTypeWrapper(_LIFECYCLESTAGE)
_FEATURETYPE = DESCRIPTOR.enum_types_by_name['FeatureType']
FeatureType = enum_type_wrapper.EnumTypeWrapper(_FEATURETYPE)
UNKNOWN_STAGE = 0
PLANNED = 1
ALPHA = 2
BETA = 3
PRODUCTION = 4
DEPRECATED = 5
DEBUG_ONLY = 6
DISABLED = 7
VALIDATION_DERIVED = 9
TYPE_UNKNOWN = 0
BYTES = 1
INT = 2
FLOAT = 3
STRUCT = 4


_SCHEMA = DESCRIPTOR.message_types_by_name['Schema']
_SCHEMA_TENSORREPRESENTATIONGROUPENTRY = _SCHEMA.nested_types_by_name['TensorRepresentationGroupEntry']
_VALUECOUNTLIST = DESCRIPTOR.message_types_by_name['ValueCountList']
_FEATURE = DESCRIPTOR.message_types_by_name['Feature']
_ANNOTATION = DESCRIPTOR.message_types_by_name['Annotation']
_NUMERICVALUECOMPARATOR = DESCRIPTOR.message_types_by_name['NumericValueComparator']
_DATASETCONSTRAINTS = DESCRIPTOR.message_types_by_name['DatasetConstraints']
_FIXEDSHAPE = DESCRIPTOR.message_types_by_name['FixedShape']
_FIXEDSHAPE_DIM = _FIXEDSHAPE.nested_types_by_name['Dim']
_VALUECOUNT = DESCRIPTOR.message_types_by_name['ValueCount']
_WEIGHTEDFEATURE = DESCRIPTOR.message_types_by_name['WeightedFeature']
_SPARSEFEATURE = DESCRIPTOR.message_types_by_name['SparseFeature']
_SPARSEFEATURE_INDEXFEATURE = _SPARSEFEATURE.nested_types_by_name['IndexFeature']
_SPARSEFEATURE_VALUEFEATURE = _SPARSEFEATURE.nested_types_by_name['ValueFeature']
_DISTRIBUTIONCONSTRAINTS = DESCRIPTOR.message_types_by_name['DistributionConstraints']
_FEATURECOVERAGECONSTRAINTS = DESCRIPTOR.message_types_by_name['FeatureCoverageConstraints']
_SEQUENCEVALUECONSTRAINTS = DESCRIPTOR.message_types_by_name['SequenceValueConstraints']
_SEQUENCELENGTHCONSTRAINTS = DESCRIPTOR.message_types_by_name['SequenceLengthConstraints']
_INTDOMAIN = DESCRIPTOR.message_types_by_name['IntDomain']
_FLOATDOMAIN = DESCRIPTOR.message_types_by_name['FloatDomain']
_STRUCTDOMAIN = DESCRIPTOR.message_types_by_name['StructDomain']
_STRINGDOMAIN = DESCRIPTOR.message_types_by_name['StringDomain']
_BOOLDOMAIN = DESCRIPTOR.message_types_by_name['BoolDomain']
_NATURALLANGUAGEDOMAIN = DESCRIPTOR.message_types_by_name['NaturalLanguageDomain']
_IMAGEDOMAIN = DESCRIPTOR.message_types_by_name['ImageDomain']
_MIDDOMAIN = DESCRIPTOR.message_types_by_name['MIDDomain']
_URLDOMAIN = DESCRIPTOR.message_types_by_name['URLDomain']
_TIMEDOMAIN = DESCRIPTOR.message_types_by_name['TimeDomain']
_TIMEOFDAYDOMAIN = DESCRIPTOR.message_types_by_name['TimeOfDayDomain']
_FEATUREPRESENCE = DESCRIPTOR.message_types_by_name['FeaturePresence']
_FEATUREPRESENCEWITHINGROUP = DESCRIPTOR.message_types_by_name['FeaturePresenceWithinGroup']
_INFINITYNORM = DESCRIPTOR.message_types_by_name['InfinityNorm']
_JENSENSHANNONDIVERGENCE = DESCRIPTOR.message_types_by_name['JensenShannonDivergence']
_FEATURECOMPARATOR = DESCRIPTOR.message_types_by_name['FeatureComparator']
_UNIQUECONSTRAINTS = DESCRIPTOR.message_types_by_name['UniqueConstraints']
_TENSORREPRESENTATION = DESCRIPTOR.message_types_by_name['TensorRepresentation']
_TENSORREPRESENTATION_DEFAULTVALUE = _TENSORREPRESENTATION.nested_types_by_name['DefaultValue']
_TENSORREPRESENTATION_DENSETENSOR = _TENSORREPRESENTATION.nested_types_by_name['DenseTensor']
_TENSORREPRESENTATION_VARLENSPARSETENSOR = _TENSORREPRESENTATION.nested_types_by_name['VarLenSparseTensor']
_TENSORREPRESENTATION_SPARSETENSOR = _TENSORREPRESENTATION.nested_types_by_name['SparseTensor']
_TENSORREPRESENTATION_RAGGEDTENSOR = _TENSORREPRESENTATION.nested_types_by_name['RaggedTensor']
_TENSORREPRESENTATION_RAGGEDTENSOR_PARTITION = _TENSORREPRESENTATION_RAGGEDTENSOR.nested_types_by_name['Partition']
_TENSORREPRESENTATIONGROUP = DESCRIPTOR.message_types_by_name['TensorRepresentationGroup']
_TENSORREPRESENTATIONGROUP_TENSORREPRESENTATIONENTRY = _TENSORREPRESENTATIONGROUP.nested_types_by_name['TensorRepresentationEntry']
_SEQUENCEMETADATA = DESCRIPTOR.message_types_by_name['SequenceMetadata']
_STRINGDOMAIN_CATEGORICAL = _STRINGDOMAIN.enum_types_by_name['Categorical']
_TIMEDOMAIN_INTEGERTIMEFORMAT = _TIMEDOMAIN.enum_types_by_name['IntegerTimeFormat']
_TIMEOFDAYDOMAIN_INTEGERTIMEOFDAYFORMAT = _TIMEOFDAYDOMAIN.enum_types_by_name['IntegerTimeOfDayFormat']
_TENSORREPRESENTATION_ROWPARTITIONDTYPE = _TENSORREPRESENTATION.enum_types_by_name['RowPartitionDType']
_SEQUENCEMETADATA_SEQUENTIALSTATUS = _SEQUENCEMETADATA.enum_types_by_name['SequentialStatus']
Schema = _reflection.GeneratedProtocolMessageType('Schema', (_message.Message,), {

  'TensorRepresentationGroupEntry' : _reflection.GeneratedProtocolMessageType('TensorRepresentationGroupEntry', (_message.Message,), {
    'DESCRIPTOR' : _SCHEMA_TENSORREPRESENTATIONGROUPENTRY,
    '__module__' : 'schema_pb2'
    # @@protoc_insertion_point(class_scope:tf_metadata.Schema.TensorRepresentationGroupEntry)
    })
  ,
  'DESCRIPTOR' : _SCHEMA,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:tf_metadata.Schema)
  })
_sym_db.RegisterMessage(Schema)
_sym_db.RegisterMessage(Schema.TensorRepresentationGroupEntry)

ValueCountList = _reflection.GeneratedProtocolMessageType('ValueCountList', (_message.Message,), {
  'DESCRIPTOR' : _VALUECOUNTLIST,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:tf_metadata.ValueCountList)
  })
_sym_db.RegisterMessage(ValueCountList)

Feature = _reflection.GeneratedProtocolMessageType('Feature', (_message.Message,), {
  'DESCRIPTOR' : _FEATURE,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:tf_metadata.Feature)
  })
_sym_db.RegisterMessage(Feature)

Annotation = _reflection.GeneratedProtocolMessageType('Annotation', (_message.Message,), {
  'DESCRIPTOR' : _ANNOTATION,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:tf_metadata.Annotation)
  })
_sym_db.RegisterMessage(Annotation)

NumericValueComparator = _reflection.GeneratedProtocolMessageType('NumericValueComparator', (_message.Message,), {
  'DESCRIPTOR' : _NUMERICVALUECOMPARATOR,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:tf_metadata.NumericValueComparator)
  })
_sym_db.RegisterMessage(NumericValueComparator)

DatasetConstraints = _reflection.GeneratedProtocolMessageType('DatasetConstraints', (_message.Message,), {
  'DESCRIPTOR' : _DATASETCONSTRAINTS,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:tf_metadata.DatasetConstraints)
  })
_sym_db.RegisterMessage(DatasetConstraints)

FixedShape = _reflection.GeneratedProtocolMessageType('FixedShape', (_message.Message,), {

  'Dim' : _reflection.GeneratedProtocolMessageType('Dim', (_message.Message,), {
    'DESCRIPTOR' : _FIXEDSHAPE_DIM,
    '__module__' : 'schema_pb2'
    # @@protoc_insertion_point(class_scope:tf_metadata.FixedShape.Dim)
    })
  ,
  'DESCRIPTOR' : _FIXEDSHAPE,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:tf_metadata.FixedShape)
  })
_sym_db.RegisterMessage(FixedShape)
_sym_db.RegisterMessage(FixedShape.Dim)

ValueCount = _reflection.GeneratedProtocolMessageType('ValueCount', (_message.Message,), {
  'DESCRIPTOR' : _VALUECOUNT,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:tf_metadata.ValueCount)
  })
_sym_db.RegisterMessage(ValueCount)

WeightedFeature = _reflection.GeneratedProtocolMessageType('WeightedFeature', (_message.Message,), {
  'DESCRIPTOR' : _WEIGHTEDFEATURE,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:tf_metadata.WeightedFeature)
  })
_sym_db.RegisterMessage(WeightedFeature)

SparseFeature = _reflection.GeneratedProtocolMessageType('SparseFeature', (_message.Message,), {

  'IndexFeature' : _reflection.GeneratedProtocolMessageType('IndexFeature', (_message.Message,), {
    'DESCRIPTOR' : _SPARSEFEATURE_INDEXFEATURE,
    '__module__' : 'schema_pb2'
    # @@protoc_insertion_point(class_scope:tf_metadata.SparseFeature.IndexFeature)
    })
  ,

  'ValueFeature' : _reflection.GeneratedProtocolMessageType('ValueFeature', (_message.Message,), {
    'DESCRIPTOR' : _SPARSEFEATURE_VALUEFEATURE,
    '__module__' : 'schema_pb2'
    # @@protoc_insertion_point(class_scope:tf_metadata.SparseFeature.ValueFeature)
    })
  ,
  'DESCRIPTOR' : _SPARSEFEATURE,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:tf_metadata.SparseFeature)
  })
_sym_db.RegisterMessage(SparseFeature)
_sym_db.RegisterMessage(SparseFeature.IndexFeature)
_sym_db.RegisterMessage(SparseFeature.ValueFeature)

DistributionConstraints = _reflection.GeneratedProtocolMessageType('DistributionConstraints', (_message.Message,), {
  'DESCRIPTOR' : _DISTRIBUTIONCONSTRAINTS,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:tf_metadata.DistributionConstraints)
  })
_sym_db.RegisterMessage(DistributionConstraints)

FeatureCoverageConstraints = _reflection.GeneratedProtocolMessageType('FeatureCoverageConstraints', (_message.Message,), {
  'DESCRIPTOR' : _FEATURECOVERAGECONSTRAINTS,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:tf_metadata.FeatureCoverageConstraints)
  })
_sym_db.RegisterMessage(FeatureCoverageConstraints)

SequenceValueConstraints = _reflection.GeneratedProtocolMessageType('SequenceValueConstraints', (_message.Message,), {
  'DESCRIPTOR' : _SEQUENCEVALUECONSTRAINTS,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:tf_metadata.SequenceValueConstraints)
  })
_sym_db.RegisterMessage(SequenceValueConstraints)

SequenceLengthConstraints = _reflection.GeneratedProtocolMessageType('SequenceLengthConstraints', (_message.Message,), {
  'DESCRIPTOR' : _SEQUENCELENGTHCONSTRAINTS,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:tf_metadata.SequenceLengthConstraints)
  })
_sym_db.RegisterMessage(SequenceLengthConstraints)

IntDomain = _reflection.GeneratedProtocolMessageType('IntDomain', (_message.Message,), {
  'DESCRIPTOR' : _INTDOMAIN,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:tf_metadata.IntDomain)
  })
_sym_db.RegisterMessage(IntDomain)

FloatDomain = _reflection.GeneratedProtocolMessageType('FloatDomain', (_message.Message,), {
  'DESCRIPTOR' : _FLOATDOMAIN,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:tf_metadata.FloatDomain)
  })
_sym_db.RegisterMessage(FloatDomain)

StructDomain = _reflection.GeneratedProtocolMessageType('StructDomain', (_message.Message,), {
  'DESCRIPTOR' : _STRUCTDOMAIN,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:tf_metadata.StructDomain)
  })
_sym_db.RegisterMessage(StructDomain)

StringDomain = _reflection.GeneratedProtocolMessageType('StringDomain', (_message.Message,), {
  'DESCRIPTOR' : _STRINGDOMAIN,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:tf_metadata.StringDomain)
  })
_sym_db.RegisterMessage(StringDomain)

BoolDomain = _reflection.GeneratedProtocolMessageType('BoolDomain', (_message.Message,), {
  'DESCRIPTOR' : _BOOLDOMAIN,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:tf_metadata.BoolDomain)
  })
_sym_db.RegisterMessage(BoolDomain)

NaturalLanguageDomain = _reflection.GeneratedProtocolMessageType('NaturalLanguageDomain', (_message.Message,), {
  'DESCRIPTOR' : _NATURALLANGUAGEDOMAIN,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:tf_metadata.NaturalLanguageDomain)
  })
_sym_db.RegisterMessage(NaturalLanguageDomain)

ImageDomain = _reflection.GeneratedProtocolMessageType('ImageDomain', (_message.Message,), {
  'DESCRIPTOR' : _IMAGEDOMAIN,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:tf_metadata.ImageDomain)
  })
_sym_db.RegisterMessage(ImageDomain)

MIDDomain = _reflection.GeneratedProtocolMessageType('MIDDomain', (_message.Message,), {
  'DESCRIPTOR' : _MIDDOMAIN,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:tf_metadata.MIDDomain)
  })
_sym_db.RegisterMessage(MIDDomain)

URLDomain = _reflection.GeneratedProtocolMessageType('URLDomain', (_message.Message,), {
  'DESCRIPTOR' : _URLDOMAIN,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:tf_metadata.URLDomain)
  })
_sym_db.RegisterMessage(URLDomain)

TimeDomain = _reflection.GeneratedProtocolMessageType('TimeDomain', (_message.Message,), {
  'DESCRIPTOR' : _TIMEDOMAIN,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:tf_metadata.TimeDomain)
  })
_sym_db.RegisterMessage(TimeDomain)

TimeOfDayDomain = _reflection.GeneratedProtocolMessageType('TimeOfDayDomain', (_message.Message,), {
  'DESCRIPTOR' : _TIMEOFDAYDOMAIN,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:tf_metadata.TimeOfDayDomain)
  })
_sym_db.RegisterMessage(TimeOfDayDomain)

FeaturePresence = _reflection.GeneratedProtocolMessageType('FeaturePresence', (_message.Message,), {
  'DESCRIPTOR' : _FEATUREPRESENCE,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:tf_metadata.FeaturePresence)
  })
_sym_db.RegisterMessage(FeaturePresence)

FeaturePresenceWithinGroup = _reflection.GeneratedProtocolMessageType('FeaturePresenceWithinGroup', (_message.Message,), {
  'DESCRIPTOR' : _FEATUREPRESENCEWITHINGROUP,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:tf_metadata.FeaturePresenceWithinGroup)
  })
_sym_db.RegisterMessage(FeaturePresenceWithinGroup)

InfinityNorm = _reflection.GeneratedProtocolMessageType('InfinityNorm', (_message.Message,), {
  'DESCRIPTOR' : _INFINITYNORM,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:tf_metadata.InfinityNorm)
  })
_sym_db.RegisterMessage(InfinityNorm)

JensenShannonDivergence = _reflection.GeneratedProtocolMessageType('JensenShannonDivergence', (_message.Message,), {
  'DESCRIPTOR' : _JENSENSHANNONDIVERGENCE,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:tf_metadata.JensenShannonDivergence)
  })
_sym_db.RegisterMessage(JensenShannonDivergence)

FeatureComparator = _reflection.GeneratedProtocolMessageType('FeatureComparator', (_message.Message,), {
  'DESCRIPTOR' : _FEATURECOMPARATOR,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:tf_metadata.FeatureComparator)
  })
_sym_db.RegisterMessage(FeatureComparator)

UniqueConstraints = _reflection.GeneratedProtocolMessageType('UniqueConstraints', (_message.Message,), {
  'DESCRIPTOR' : _UNIQUECONSTRAINTS,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:tf_metadata.UniqueConstraints)
  })
_sym_db.RegisterMessage(UniqueConstraints)

TensorRepresentation = _reflection.GeneratedProtocolMessageType('TensorRepresentation', (_message.Message,), {

  'DefaultValue' : _reflection.GeneratedProtocolMessageType('DefaultValue', (_message.Message,), {
    'DESCRIPTOR' : _TENSORREPRESENTATION_DEFAULTVALUE,
    '__module__' : 'schema_pb2'
    # @@protoc_insertion_point(class_scope:tf_metadata.TensorRepresentation.DefaultValue)
    })
  ,

  'DenseTensor' : _reflection.GeneratedProtocolMessageType('DenseTensor', (_message.Message,), {
    'DESCRIPTOR' : _TENSORREPRESENTATION_DENSETENSOR,
    '__module__' : 'schema_pb2'
    # @@protoc_insertion_point(class_scope:tf_metadata.TensorRepresentation.DenseTensor)
    })
  ,

  'VarLenSparseTensor' : _reflection.GeneratedProtocolMessageType('VarLenSparseTensor', (_message.Message,), {
    'DESCRIPTOR' : _TENSORREPRESENTATION_VARLENSPARSETENSOR,
    '__module__' : 'schema_pb2'
    # @@protoc_insertion_point(class_scope:tf_metadata.TensorRepresentation.VarLenSparseTensor)
    })
  ,

  'SparseTensor' : _reflection.GeneratedProtocolMessageType('SparseTensor', (_message.Message,), {
    'DESCRIPTOR' : _TENSORREPRESENTATION_SPARSETENSOR,
    '__module__' : 'schema_pb2'
    # @@protoc_insertion_point(class_scope:tf_metadata.TensorRepresentation.SparseTensor)
    })
  ,

  'RaggedTensor' : _reflection.GeneratedProtocolMessageType('RaggedTensor', (_message.Message,), {

    'Partition' : _reflection.GeneratedProtocolMessageType('Partition', (_message.Message,), {
      'DESCRIPTOR' : _TENSORREPRESENTATION_RAGGEDTENSOR_PARTITION,
      '__module__' : 'schema_pb2'
      # @@protoc_insertion_point(class_scope:tf_metadata.TensorRepresentation.RaggedTensor.Partition)
      })
    ,
    'DESCRIPTOR' : _TENSORREPRESENTATION_RAGGEDTENSOR,
    '__module__' : 'schema_pb2'
    # @@protoc_insertion_point(class_scope:tf_metadata.TensorRepresentation.RaggedTensor)
    })
  ,
  'DESCRIPTOR' : _TENSORREPRESENTATION,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:tf_metadata.TensorRepresentation)
  })
_sym_db.RegisterMessage(TensorRepresentation)
_sym_db.RegisterMessage(TensorRepresentation.DefaultValue)
_sym_db.RegisterMessage(TensorRepresentation.DenseTensor)
_sym_db.RegisterMessage(TensorRepresentation.VarLenSparseTensor)
_sym_db.RegisterMessage(TensorRepresentation.SparseTensor)
_sym_db.RegisterMessage(TensorRepresentation.RaggedTensor)
_sym_db.RegisterMessage(TensorRepresentation.RaggedTensor.Partition)

TensorRepresentationGroup = _reflection.GeneratedProtocolMessageType('TensorRepresentationGroup', (_message.Message,), {

  'TensorRepresentationEntry' : _reflection.GeneratedProtocolMessageType('TensorRepresentationEntry', (_message.Message,), {
    'DESCRIPTOR' : _TENSORREPRESENTATIONGROUP_TENSORREPRESENTATIONENTRY,
    '__module__' : 'schema_pb2'
    # @@protoc_insertion_point(class_scope:tf_metadata.TensorRepresentationGroup.TensorRepresentationEntry)
    })
  ,
  'DESCRIPTOR' : _TENSORREPRESENTATIONGROUP,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:tf_metadata.TensorRepresentationGroup)
  })
_sym_db.RegisterMessage(TensorRepresentationGroup)
_sym_db.RegisterMessage(TensorRepresentationGroup.TensorRepresentationEntry)

SequenceMetadata = _reflection.GeneratedProtocolMessageType('SequenceMetadata', (_message.Message,), {
  'DESCRIPTOR' : _SEQUENCEMETADATA,
  '__module__' : 'schema_pb2'
  # @@protoc_insertion_point(class_scope:tf_metadata.SequenceMetadata)
  })
_sym_db.RegisterMessage(SequenceMetadata)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\032org.tensorflow.metadata.v0P\001\370\001\001'
  _SCHEMA_TENSORREPRESENTATIONGROUPENTRY._options = None
  _SCHEMA_TENSORREPRESENTATIONGROUPENTRY._serialized_options = b'8\001'
  _FEATURE.fields_by_name['deprecated']._options = None
  _FEATURE.fields_by_name['deprecated']._serialized_options = b'\030\001'
  _SPARSEFEATURE.fields_by_name['deprecated']._options = None
  _SPARSEFEATURE.fields_by_name['deprecated']._serialized_options = b'\030\001'
  _SPARSEFEATURE.fields_by_name['presence']._options = None
  _SPARSEFEATURE.fields_by_name['presence']._serialized_options = b'\030\001'
  _SPARSEFEATURE.fields_by_name['type']._options = None
  _SPARSEFEATURE.fields_by_name['type']._serialized_options = b'\030\001'
  _FEATURECOVERAGECONSTRAINTS.fields_by_name['excluded_int_tokens']._options = None
  _FEATURECOVERAGECONSTRAINTS.fields_by_name['excluded_int_tokens']._serialized_options = b'\020\001'
  _TENSORREPRESENTATIONGROUP_TENSORREPRESENTATIONENTRY._options = None
  _TENSORREPRESENTATIONGROUP_TENSORREPRESENTATIONENTRY._serialized_options = b'8\001'
  _LIFECYCLESTAGE._serialized_start=7412
  _LIFECYCLESTAGE._serialized_end=7573
  _FEATURETYPE._serialized_start=7575
  _FEATURETYPE._serialized_end=7649
  _SCHEMA._serialized_start=92
  _SCHEMA._serialized_end=720
  _SCHEMA_TENSORREPRESENTATIONGROUPENTRY._serialized_start=616
  _SCHEMA_TENSORREPRESENTATIONGROUPENTRY._serialized_end=720
  _VALUECOUNTLIST._serialized_start=722
  _VALUECOUNTLIST._serialized_end=784
  _FEATURE._serialized_start=787
  _FEATURE._serialized_end=2306
  _ANNOTATION._serialized_start=2308
  _ANNOTATION._serialized_end=2396
  _NUMERICVALUECOMPARATOR._serialized_start=2398
  _NUMERICVALUECOMPARATOR._serialized_end=2486
  _DATASETCONSTRAINTS._serialized_start=2489
  _DATASETCONSTRAINTS._serialized_end=2719
  _FIXEDSHAPE._serialized_start=2721
  _FIXEDSHAPE._serialized_end=2810
  _FIXEDSHAPE_DIM._serialized_start=2777
  _FIXEDSHAPE_DIM._serialized_end=2810
  _VALUECOUNT._serialized_start=2812
  _VALUECOUNT._serialized_end=2850
  _WEIGHTEDFEATURE._serialized_start=2853
  _WEIGHTEDFEATURE._serialized_end=3017
  _SPARSEFEATURE._serialized_start=3020
  _SPARSEFEATURE._serialized_end=3482
  _SPARSEFEATURE_INDEXFEATURE._serialized_start=3418
  _SPARSEFEATURE_INDEXFEATURE._serialized_end=3446
  _SPARSEFEATURE_VALUEFEATURE._serialized_start=3448
  _SPARSEFEATURE_VALUEFEATURE._serialized_end=3476
  _DISTRIBUTIONCONSTRAINTS._serialized_start=3484
  _DISTRIBUTIONCONSTRAINTS._serialized_end=3537
  _FEATURECOVERAGECONSTRAINTS._serialized_start=3540
  _FEATURECOVERAGECONSTRAINTS._serialized_end=3712
  _SEQUENCEVALUECONSTRAINTS._serialized_start=3715
  _SEQUENCEVALUECONSTRAINTS._serialized_end=3917
  _SEQUENCELENGTHCONSTRAINTS._serialized_start=3920
  _SEQUENCELENGTHCONSTRAINTS._serialized_end=4064
  _INTDOMAIN._serialized_start=4066
  _INTDOMAIN._serialized_end=4141
  _FLOATDOMAIN._serialized_start=4144
  _FLOATDOMAIN._serialized_end=4287
  _STRUCTDOMAIN._serialized_start=4289
  _STRUCTDOMAIN._serialized_end=4394
  _STRINGDOMAIN._serialized_start=4397
  _STRINGDOMAIN._serialized_end=4588
  _STRINGDOMAIN_CATEGORICAL._serialized_start=4505
  _STRINGDOMAIN_CATEGORICAL._serialized_end=4588
  _BOOLDOMAIN._serialized_start=4590
  _BOOLDOMAIN._serialized_end=4657
  _NATURALLANGUAGEDOMAIN._serialized_start=4660
  _NATURALLANGUAGEDOMAIN._serialized_end=4940
  _IMAGEDOMAIN._serialized_start=4942
  _IMAGEDOMAIN._serialized_end=5026
  _MIDDOMAIN._serialized_start=5028
  _MIDDOMAIN._serialized_end=5039
  _URLDOMAIN._serialized_start=5041
  _URLDOMAIN._serialized_end=5052
  _TIMEDOMAIN._serialized_start=5055
  _TIMEDOMAIN._serialized_end=5314
  _TIMEDOMAIN_INTEGERTIMEFORMAT._serialized_start=5164
  _TIMEDOMAIN_INTEGERTIMEFORMAT._serialized_end=5304
  _TIMEOFDAYDOMAIN._serialized_start=5317
  _TIMEOFDAYDOMAIN._serialized_end=5515
  _TIMEOFDAYDOMAIN_INTEGERTIMEOFDAYFORMAT._serialized_start=5440
  _TIMEOFDAYDOMAIN_INTEGERTIMEOFDAYFORMAT._serialized_end=5505
  _FEATUREPRESENCE._serialized_start=5517
  _FEATUREPRESENCE._serialized_end=5575
  _FEATUREPRESENCEWITHINGROUP._serialized_start=5577
  _FEATUREPRESENCEWITHINGROUP._serialized_end=5623
  _INFINITYNORM._serialized_start=5625
  _INFINITYNORM._serialized_end=5658
  _JENSENSHANNONDIVERGENCE._serialized_start=5660
  _JENSENSHANNONDIVERGENCE._serialized_end=5704
  _FEATURECOMPARATOR._serialized_start=5707
  _FEATURECOMPARATOR._serialized_end=5849
  _UNIQUECONSTRAINTS._serialized_start=5851
  _UNIQUECONSTRAINTS._serialized_end=5896
  _TENSORREPRESENTATION._serialized_start=5899
  _TENSORREPRESENTATION._serialized_end=7003
  _TENSORREPRESENTATION_DEFAULTVALUE._serialized_start=6226
  _TENSORREPRESENTATION_DEFAULTVALUE._serialized_end=6337
  _TENSORREPRESENTATION_DENSETENSOR._serialized_start=6340
  _TENSORREPRESENTATION_DENSETENSOR._serialized_end=6485
  _TENSORREPRESENTATION_VARLENSPARSETENSOR._serialized_start=6487
  _TENSORREPRESENTATION_VARLENSPARSETENSOR._serialized_end=6528
  _TENSORREPRESENTATION_SPARSETENSOR._serialized_start=6530
  _TENSORREPRESENTATION_SPARSETENSOR._serialized_end=6645
  _TENSORREPRESENTATION_RAGGEDTENSOR._serialized_start=6648
  _TENSORREPRESENTATION_RAGGEDTENSOR._serialized_end=6935
  _TENSORREPRESENTATION_RAGGEDTENSOR_PARTITION._serialized_start=6864
  _TENSORREPRESENTATION_RAGGEDTENSOR_PARTITION._serialized_end=6935
  _TENSORREPRESENTATION_ROWPARTITIONDTYPE._serialized_start=6937
  _TENSORREPRESENTATION_ROWPARTITIONDTYPE._serialized_end=6995
  _TENSORREPRESENTATIONGROUP._serialized_start=7006
  _TENSORREPRESENTATIONGROUP._serialized_end=7226
  _TENSORREPRESENTATIONGROUP_TENSORREPRESENTATIONENTRY._serialized_start=7132
  _TENSORREPRESENTATIONGROUP_TENSORREPRESENTATIONENTRY._serialized_end=7226
  _SEQUENCEMETADATA._serialized_start=7229
  _SEQUENCEMETADATA._serialized_end=7409
  _SEQUENCEMETADATA_SEQUENTIALSTATUS._serialized_start=7324
  _SEQUENCEMETADATA_SEQUENTIALSTATUS._serialized_end=7409
# @@protoc_insertion_point(module_scope)
